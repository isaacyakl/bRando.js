{"version":3,"file":"bRando.js","mappings":"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","sources":["webpack://bRando/webpack/universalModuleDefinition","webpack://bRando/webpack/bootstrap","webpack://bRando/webpack/runtime/define property getters","webpack://bRando/webpack/runtime/hasOwnProperty shorthand","webpack://bRando/webpack/runtime/make namespace object","webpack://bRando/./src/bRando.ts","webpack://bRando/./src/browser/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bRando\"] = factory();\n\telse\n\t\troot[\"bRando\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * An interface for options used when initializing a background changer. It is passed to the {@link create} function or a {@link bRando} class constructor.\r\n */\r\nexport interface Options {\r\n\t/**\r\n\t * Sets the [CSS selector](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors) used when selecting elements to change backgrounds on; multiple element selections are supported. e.g. `\"main\"`\r\n\t * @defaultValue `\"body\"`\r\n\t */\r\n\tCSSSelector?: string;\r\n\r\n\t/**\r\n\t * Sets an array of [CSS backgrounds](https://developer.mozilla.org/en-US/docs/Web/CSS/background) to be used. e.g. `[\"red\",\"green\",\"blue\"]`\r\n\t * @defaultValue An array of {@link bRando._demoBackgrounds demo CSS backgrounds }\r\n\t */\r\n\tbackgrounds?: string[];\r\n\r\n\t/**\r\n\t * Sets the time between background changes (in milliseconds). e.g. `5000`\r\n\t * @remarks\r\n\t * [[include:transition-duration-timeout-warning.md]]\r\n\t * @defaultValue `7500`\r\n\t */\r\n\ttimeout?: number;\r\n\r\n\t/**\r\n\t * Sets whether to pick the next background value at random (`true`) or sequentially (`false`).\r\n\t * @defaultValue `true`\r\n\t */\r\n\trandom?: boolean;\r\n\r\n\t/**\r\n\t * Sets the [CSS transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition) (without a [transition-property](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property)) used when changing between backgrounds. e.g. `\"500ms ease-in\"` or `\"0.5s ease-in-out 0.25s\"`\r\n\t * @remarks\r\n\t * [[include:transition-duration-timeout-warning.md]]\r\n\t * @defaultValue `\"5000ms\"`\r\n\t */\r\n\ttransition?: string;\r\n}\r\n\r\n/**\r\n * A class for automatically changing CSS backgrounds on any element in a random or sequential order &mdash; a background changer. A usage example can be found in [the readme](https://github.com/isaacyakl/brandojs#-usage).\r\n * @remarks\r\n * A background will never repeat (back-to-back) unless only one {@link Options.backgrounds background value} is given.\r\n */\r\nexport class bRando {\r\n\tprotected readonly _CSSSelector: string = \"\";\r\n\t/**\r\n\t * Returns the [CSS selector](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors) used when selecting elements for a background changer. e.g. `\"main\"`\r\n\t */\r\n\tpublic get CSSSelector(): string {\r\n\t\treturn this._CSSSelector;\r\n\t}\r\n\r\n\tprotected readonly _nodes: NodeList;\r\n\t/**\r\n\t * Returns a [`NodeList`](https://developer.mozilla.org/en-US/docs/Web/API/NodeList) containing every element selected for a background changer.\r\n\t */\r\n\tpublic get nodes(): NodeList {\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\tprotected _backgrounds: string[] = [];\r\n\t/**\r\n\t * Returns an array of the background values set for a background changer. e.g. `[\"red\", \"green\", \"blue\"]`\r\n\t */\r\n\tpublic get backgrounds(): string[] {\r\n\t\treturn this._backgrounds;\r\n\t}\r\n\t/**\r\n\t * Sets an array of [CSS backgrounds](https://developer.mozilla.org/en-US/docs/Web/CSS/background) to be used. e.g. `[\"red\",\"green\",\"blue\"]`\r\n\t * @defaultValue An array of demo values\r\n\t */\r\n\tpublic set backgrounds(value: string[] | undefined) {\r\n\t\tif (\r\n\t\t\tArray.isArray(value) &&\r\n\t\t\tvalue.every((b) => {\r\n\t\t\t\treturn typeof b === \"string\";\r\n\t\t\t})\r\n\t\t) {\r\n\t\t\tthis._backgrounds = value;\r\n\t\t} else {\r\n\t\t\tthis._backgrounds = this._demoBackgrounds;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _timeout: number = 0;\r\n\t/**\r\n\t * Returns the set time between background changes (in milliseconds). e.g. `5000`\r\n\t */\r\n\tpublic get timeout(): number {\r\n\t\treturn this._timeout;\r\n\t}\r\n\t/**\r\n\t * Sets the time between background changes (in milliseconds). e.g. `5000`\r\n\t * @remarks\r\n\t * [[include:transition-duration-timeout-warning.md]]\r\n\t * @defaultValue `7500`\r\n\t */\r\n\tpublic set timeout(value: number | undefined) {\r\n\t\tif (value && value > 0) {\r\n\t\t\tthis._timeout = value;\r\n\t\t} else {\r\n\t\t\tthis._timeout = 7500;\r\n\t\t}\r\n\t\tif (this._changer !== -1) {\r\n\t\t\tthis.pause();\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _random: boolean = true;\r\n\t/**\r\n\t * Returns whether a background changer will randomly (`true`) or sequentially (`false`) pick the next background value.\r\n\t */\r\n\tpublic get random(): boolean {\r\n\t\treturn this._random;\r\n\t}\r\n\t/**\r\n\t * Sets whether to pick the next background value at random (`true`) or sequentially (`false`).\r\n\t * @defaultValue `true`\r\n\t */\r\n\tpublic set random(value: boolean | undefined) {\r\n\t\tthis._random = typeof value !== \"boolean\" ? true : value;\r\n\t}\r\n\r\n\tprotected _transition: string = \"\";\r\n\t/**\r\n\t * Returns the [CSS transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition) (without a [transition-property](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property)) used when changing between backgrounds. e.g. `\"500ms ease-in\"` or `\"0.5s ease-in-out 0.25s\"`\r\n\t */\r\n\tpublic get transition(): string {\r\n\t\treturn this._transition;\r\n\t}\r\n\t/**\r\n\t * Sets the [CSS transition](https://developer.mozilla.org/en-US/docs/Web/CSS/transition) (without a [transition-property](https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property)) used when changing between backgrounds. e.g. `\"500ms ease-in\"` or `\"0.5s ease-in-out 0.25s\"`\r\n\t * @remarks\r\n\t * [[include:transition-duration-timeout-warning.md]]\r\n\t * @defaultValue `\"5000ms\"`\r\n\t */\r\n\tpublic set transition(value: string | undefined) {\r\n\t\tthis._transition = typeof value !== \"string\" ? \"5000ms\" : value;\r\n\t}\r\n\r\n\tprotected readonly _originalCSSBackgrounds: string[] = [];\r\n\tprotected readonly _originalCSSPositions: string[] = [];\r\n\tprotected readonly _originalCSSZIndexes: string[] = [];\r\n\tprotected _changer: number = -1;\r\n\tprotected readonly _styleElement: HTMLElement;\r\n\tprotected _isAfterOpaque: boolean = false;\r\n\tprotected readonly _CSSBackgroundVarName: string;\r\n\tprotected readonly _CSSOpacityVarName: string;\r\n\tprotected readonly _CSSTransitionVarName: string;\r\n\tprotected readonly _CSSContentVarName: string;\r\n\r\n\tprotected _currentBackgroundIndex: number = -1;\r\n\t/**\r\n\t *\r\n\t * Returns the index of the background currently being displayed from the {@link bRando.backgrounds backgrounds array}. Returns `-1` if none of the backgrounds are being displayed.\r\n\t */\r\n\tpublic get currentBackgroundIndex(): number {\r\n\t\treturn this._currentBackgroundIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of demo CSS backgrounds. Follow the link below &#x2199; to see the values in the source code.\r\n\t */\r\n\tprotected readonly _demoBackgrounds: string[] =\r\n\t\t// prettier-ignore\r\n\t\t[\r\n\t\t`url(\"https://unpkg.com/brandojs/dist/img/alex-knight-vaA6EQiUSo4-unsplash_result.jpg\") center/cover no-repeat`, \r\n\t\t`url(\"https://unpkg.com/brandojs/dist/img/joel-fulgencio-01fAtHwYqo0-unsplash_result.jpg\") center/cover no-repeat`, \r\n\t\t`url(\"https://unpkg.com/brandojs/dist/img/pawel-nolbert-4u2U8EO9OzY-unsplash_result.jpg\") center/cover no-repeat`, \r\n\t\t`url(\"https://unpkg.com/brandojs/dist/img/stephan-valentin-oqYLdbuJDQU-unsplash_result.jpg\") center/cover no-repeat`, \r\n\t\t`url(\"https://unpkg.com/brandojs/dist/img/waranont-joe-T7qyLNPwgKA-unsplash_result.jpg\") center/cover no-repeat`, \r\n\t\t`linear-gradient(80deg, #0864c8 25%, #588fca 75%)`\r\n\t];\r\n\r\n\t/**\r\n\t * Constructs a background changer and accepts an {@link Options} object. A usage example can be found in [the readme](https://github.com/isaacyakl/brandojs#-usage).\r\n\t *\r\n\t * @remarks\r\n\t * [[include:first-background.md]]\r\n\t */\r\n\tconstructor(options?: Options) {\r\n\t\toptions = options == null ? {} : options;\r\n\t\tthis._CSSSelector = typeof options.CSSSelector !== \"string\" ? \"body\" : options.CSSSelector;\r\n\t\tthis._nodes = document.querySelectorAll(this.CSSSelector);\r\n\t\tthis.backgrounds = options.backgrounds;\r\n\t\tthis.timeout = options.timeout;\r\n\t\tthis.random = options.random;\r\n\t\tthis.transition = options.transition;\r\n\t\tthis.nodes.forEach((e) => {\r\n\t\t\tthis._originalCSSBackgrounds.push((e as HTMLElement).style.background); // backup the original CSS background property\r\n\t\t\tthis._originalCSSPositions.push((e as HTMLElement).style.position); // backup the original CSS position property\r\n\t\t\tthis._originalCSSZIndexes.push((e as HTMLElement).style.zIndex); // backup the original CSS z-index property\r\n\t\t\t(e as HTMLElement).style.position = \"relative\"; // set each element to be relative\r\n\t\t});\r\n\t\tthis._styleElement = document.createElement(\"style\");\r\n\t\tthis._CSSBackgroundVarName = `--bRandoBg${this.CSSSelector.replace(/[^a-z0-9]/gi, \"\")}`;\r\n\t\tthis._CSSOpacityVarName = `--bRandoOpacity${this.CSSSelector.replace(/[^a-z0-9]/gi, \"\")}`;\r\n\t\tthis._CSSTransitionVarName = `--bRandoTransition${this.CSSSelector.replace(/[^a-z0-9]/gi, \"\")}`;\r\n\t\tthis._CSSContentVarName = `--bRandoContent${this.CSSSelector.replace(/[^a-z0-9]/gi, \"\")}`;\r\n\t\tthis._styleElement.innerText = `${this.CSSSelector}::after{background:var(${this._CSSBackgroundVarName});content:var(${this._CSSContentVarName});position:absolute;top:0;bottom:0;left:0;right:0;z-index:-1;opacity:var(${this._CSSOpacityVarName});transition: var(${this._CSSTransitionVarName});}`;\r\n\t\tdocument.head.append(this._styleElement);\r\n\t\tthis.nodes.forEach((e) => {\r\n\t\t\t(e as HTMLElement).style.setProperty(this._CSSOpacityVarName, \"0\");\r\n\t\t\t(e as HTMLElement).style.setProperty(this._CSSTransitionVarName, `opacity ${this.transition}`);\r\n\t\t\t(e as HTMLElement).style.setProperty(this._CSSContentVarName, \"''\");\r\n\t\t\t(e as HTMLElement).style.zIndex = \"0\";\r\n\t\t});\r\n\r\n\t\tthis.play();\r\n\t}\r\n\r\n\t/**\r\n\t * Plays a background changer. This is automatically called when a new background changer is constructed.\r\n\t * @example\r\n\t * ```javascript\r\n\t * bgChanger.pause(); // changer was paused\r\n\t * bgChanger.play(); // resume changer\r\n\t * ```\r\n\t */\r\n\tplay(): void {\r\n\t\tif (this.isRemoved()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.pause();\r\n\t\tthis._changer = window.setInterval(() => {\r\n\t\t\tthis.next();\r\n\t\t}, this.timeout);\r\n\t}\r\n\t/**\r\n\t * Pauses a background changer on the current background. Calling this will not pause any transition animations.\r\n\t * @example\r\n\t * ```javascript\r\n\t * bgChanger.pause();\r\n\t * ```\r\n\t */\r\n\tpause(): void {\r\n\t\twindow.clearInterval(this._changer);\r\n\t\tthis._changer = -1;\r\n\t}\r\n\t/**\r\n\t * Advances a background changer to the next background in the sequence or at random, depending on the value of {@link bRando.random}.\r\n\t * @example\r\n\t * ```javascript\r\n\t * bgChanger.next();\r\n\t * ```\r\n\t */\r\n\tnext(): void {\r\n\t\tif (this.isRemoved()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst getNewRandomBackgroundIndex = (): number => {\r\n\t\t\tlet newIndex: number;\r\n\t\t\tdo {\r\n\t\t\t\tnewIndex = Math.floor(Math.random() * this.backgrounds.length);\r\n\t\t\t} while (this.currentBackgroundIndex === newIndex);\r\n\t\t\treturn newIndex;\r\n\t\t};\r\n\t\t// if a changer exists reset it\r\n\t\tif (this._changer !== -1) {\r\n\t\t\tthis.play();\r\n\t\t}\r\n\t\tif (this.backgrounds.length > 1) {\r\n\t\t\tthis._currentBackgroundIndex = this.random ? getNewRandomBackgroundIndex() : this.currentBackgroundIndex === this.backgrounds.length - 1 ? (this._currentBackgroundIndex = 0) : this.currentBackgroundIndex + 1;\r\n\t\t} else if (this._currentBackgroundIndex === -1) {\r\n\t\t\tthis._currentBackgroundIndex = 0;\r\n\t\t}\r\n\r\n\t\tthis.nodes.forEach((e) => {\r\n\t\t\t(e as HTMLElement).style.setProperty(this._CSSTransitionVarName, `opacity ${this.transition}`);\r\n\t\t\tif (!this._isAfterOpaque) {\r\n\t\t\t\t(e as HTMLElement).style.setProperty(this._CSSBackgroundVarName, this.backgrounds[this.currentBackgroundIndex]);\r\n\t\t\t\t(e as HTMLElement).style.setProperty(this._CSSOpacityVarName, \"1\");\r\n\t\t\t} else {\r\n\t\t\t\t(e as HTMLElement).style.background = this.backgrounds[this.currentBackgroundIndex];\r\n\t\t\t\t(e as HTMLElement).style.setProperty(this._CSSOpacityVarName, \"0\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._isAfterOpaque = !this._isAfterOpaque;\r\n\t}\r\n\t/**\r\n\t * Removes a background changer from the DOM and restores the selected elements to their state before background changes were made.\r\n\t *\r\n\t * @example\r\n\t * ```javascript\r\n\t * const bgChanger = new bRando(options); // changer created for <body>\r\n\t * bgChanger.remove(); // remove changer from the DOM and <body>\r\n\t * ```\r\n\t */\r\n\tremove(): void {\r\n\t\tthis.pause();\r\n\t\tthis.nodes.forEach((e, i) => {\r\n\t\t\t// hide pseudo ::after elements\r\n\t\t\t(e as HTMLElement).style.setProperty(this._CSSOpacityVarName, \"0\");\r\n\t\t\t(e as HTMLElement).style.setProperty(this._CSSContentVarName, \"none\");\r\n\t\t\t(e as HTMLElement).style.background = this._originalCSSBackgrounds[i]; // restore original CSS background property\r\n\t\t\t(e as HTMLElement).style.position = this._originalCSSPositions[i]; // restore original CSS position property\r\n\t\t\t(e as HTMLElement).style.zIndex = this._originalCSSZIndexes[i]; // restore original CSS z-index property\r\n\t\t});\r\n\t\tthis._styleElement.remove();\r\n\t}\r\n\t/**\r\n\t * Returns whether a background changer is playing.\r\n\t * @example\r\n\t * ```javascript\r\n\t * bgChanger.play(); // changer was told to play\r\n\t * bgChanger.isRunning(); // returns true\r\n\t * ```\r\n\t * @returns `true` if running\r\n\t */\r\n\tisRunning(): boolean {\r\n\t\treturn this._changer !== -1 ? true : false;\r\n\t}\r\n\t/**\r\n\t * Returns whether a background changer has been removed.\r\n\t * @example\r\n\t * ```javascript\r\n\t * bgChanger.remove(); // changer was told to remove itself\r\n\t * bgChanger.isRemoved(); // returns true\r\n\t * ```\r\n\t * @returns `true` if removed\r\n\t */\r\n\tisRemoved(): boolean {\r\n\t\treturn !this._styleElement.isConnected;\r\n\t}\r\n}\r\n","import { bRando, Options } from \"../bRando\";\r\n\r\n/**\r\n * A function for creating a background changer ({@link bRando} instance) in the web browser environment. It accepts an {@link Options} object. A usage example can be found in [the readme](https://github.com/isaacyakl/brandojs#-usage).\r\n *\r\n * ### Demo\r\n * Create a demo instance for testing or verifying correct installation by omitting the {@link Options} parameter.\r\n * ```javascript\r\n * const demo = bRando.create(); // Selects the <body> element by default\r\n * ```\r\n * @remarks\r\n * [[include:first-background.md]]\r\n * [[include:transition-duration-timeout-warning.md]]\r\n *\r\n */\r\nexport function create(options?: Options): bRando {\r\n\treturn new bRando(options);\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","bRando","CSSSelector","_CSSSelector","nodes","_nodes","backgrounds","_backgrounds","Array","isArray","every","b","_demoBackgrounds","timeout","_timeout","_changer","pause","play","random","_random","transition","_transition","currentBackgroundIndex","_currentBackgroundIndex","constructor","options","document","querySelectorAll","forEach","e","_originalCSSBackgrounds","push","style","background","_originalCSSPositions","position","_originalCSSZIndexes","zIndex","_styleElement","createElement","_CSSBackgroundVarName","replace","_CSSOpacityVarName","_CSSTransitionVarName","_CSSContentVarName","innerText","head","append","setProperty","isRemoved","window","setInterval","next","clearInterval","getNewRandomBackgroundIndex","newIndex","Math","floor","length","_isAfterOpaque","remove","i","isRunning","isConnected","create"],"sourceRoot":""}